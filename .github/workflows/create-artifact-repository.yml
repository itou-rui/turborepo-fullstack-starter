name: "Create Artifacts Repository"

on:
  workflow_call:
    inputs:
      repo_name:
        required: true
        type: string
      google_cloud_region:
        required: true
        type: string
    secrets:
      google_cloud_project_id:
        required: true
      google_cloud_project_number:
        required: true
      google_cloud_workload_identity_pool_id:
        required: true
      google_cloud_workload_identity_provider_id:
        required: true
      google_cloud_service_account:
        required: true
    outputs:
      access_token:
        value: ${{ jobs.authenticate.outputs.access_token }}

jobs:
  create:
    name: Check and Create
    runs-on: ubuntu-latest
    outputs:
      access_token: ${{ steps.auth-google-cloud.outputs.access_token }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Authenticate with Google Cloud
        id: auth-google-cloud
        uses: google-github-actions/auth@v1
        with:
          token_format: "access_token"
          workload_identity_provider: "projects/${{ secrets.google_cloud_project_number }}/locations/global/workloadIdentityPools/${{ secrets.google_cloud_workload_identity_pool_id }}/providers/${{ secrets.google_cloud_workload_identity_provider_id }}"
          service_account: "${{ secrets.google_cloud_service_account }}"
          project_id: "${{ secrets.google_cloud_project_id }}"

      - name: Check if artifact repository is created
        id: check_artifact_repository
        run: |
          if gcloud artifacts repositories describe "${{ inputs.repo_name }}" --location="${{ inputs.google_cloud_region }}" --project="${{ secrets.google_cloud_project_id }}"; then
            echo "is_created=true" >> $GITHUB_OUTPUT
          else
            echo "is_created=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Artifacts Repository
        id: create_artifact_repository
        if: steps.check_artifact_repository.outputs.is_created == 'false'
        run: |
          gcloud artifacts repositories create ${{ inputs.repo_name }} \
            --repository-format="docker" \
            --location="${{ inputs.google_cloud_region }}" \
            --project="${{ secrets.google_cloud_project_id }}"
