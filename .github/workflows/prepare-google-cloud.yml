name: "Prepare GoogleCloud"

on:
  workflow_call:
    inputs:
      action:
        type: string
        default: deploy
      repo_name:
        required: true
        type: string
      google_cloud_region:
        required: true
        type: string

    secrets:
      google_cloud_project_id:
        required: true
      google_cloud_project_number:
        required: true
      google_cloud_workload_identity_pool_id:
        required: true
      google_cloud_workload_identity_provider_id:
        required: true
      google_cloud_service_account:
        required: true
    outputs:
      access_token:
        value: ${{ jobs.auth.outputs.access_token }}

jobs:
  auth-google-cloud:
    runs-on: ubuntu-latest
    outputs:
      access_token: ${{ steps.auth.outputs.access_token }}
    steps:
      - uses: google-github-actions/auth@v1
        id: auth
        with:
          token_format: "access_token"
          workload_identity_provider: "projects/${{ secrets.google_cloud_project_number }}/locations/global/workloadIdentityPools/${{ secrets.google_cloud_workload_identity_pool_id }}/providers/${{ secrets.google_cloud_workload_identity_provider_id }}"
          google_cloud_service_account: "${{ secrets.google_cloud_service_account }}"
          project_id: "${{ secrets.google_cloud_project_id }}"

  check-artifact-repository:
    runs-on: ubuntu-latest
    outputs:
      is_created: ${{ steps.check_artifact_repository.outputs.is_created }}
    steps:
      - name: Check if artifact repository is created
        id: check_artifact_repository
        run: |
          gcloud artifacts repositories describe ${{ inputs.repo_name }} --location=${{ inputs.google_cloud_region }} --project=${{ secrets.google_cloud_project_id }} && echo "is_created=true" >> $GITHUB_OUTPUT || echo "is_created=false" >> $GITHUB_OUTPUT

  create-artifact-repository:
    runs-on: ubuntu-latest
    needs: check-artifact-repository
    if: ${{ inputs.action == 'deploy' && needs.check-artifact-repository.outputs.is_created == 'false' }}
    steps:
      - name: Create Artifacts Repository
        id: create_artifact_repository
        run: |
          gcloud artifacts repositories create ${{ inputs.repo_name }} \
            --repository-format="docker" \
            --location="${{ inputs.google_cloud_region }}" \
            --project="${{ secrets.google_cloud_project_id }}"
