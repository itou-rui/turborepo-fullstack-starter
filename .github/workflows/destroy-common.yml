on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      app:
        required: true
        type: string
      app_name:
        required: true
        type: string
      app_version:
        required: true
        type: string
      repo_name:
        required: true
        type: string
      ref_name:
        required: true
        type: string
      google_cloud_region:
        required: true
        type: string
      google_cloud_service_env:
        required: true
        type: string

jobs:
  artifact-repository:
    name: Delete Artifact Repository
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Auth GoogleCloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: "access_token"
          workload_identity_provider: "projects/${{ secrets.GOOGLE_CLOUD_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ secrets.GOOGLE_CLOUD_IDENTITY_POOL_ID }}/providers/${{ secrets.GOOGLE_CLOUD_IDENTITY_PROVIDER_ID }}"
          service_account: "${{ inputs.app_name }}-app-sa@${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}.iam.gserviceaccount.com"
          project_id: "${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}"

      - name: Generate Image
        id: generate_image
        run: |
          IMAGE_NAME="${{ inputs.google_cloud_region }}-docker.pkg.dev/${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}/${{ inputs.repo_name }}/${{ inputs.app }}/${{ inputs.google_cloud_service_env }}"
          echo "docker_image=${IMAGE_NAME}" >> $GITHUB_OUTPUT

      - name: Remove Docker Images
        id: remove_docker_images
        run: |
          # List images in the Artifact Registry
          hashs=$(gcloud artifacts docker images list ${{ steps.generate_image.outputs.docker_image }} --include-tags --format="get(metadata.name)" --project ${{ secrets.GOOGLE_CLOUD_PROJECT_ID }})

          # Loop through each image and delete it
          if [ -n "$hashs" ]; then
            for hash in $hashs; do
              gcloud artifacts docker images delete "${{ steps.generate_image.outputs.docker_image }}@$hash" --delete-tags --project=${{ secrets.GOOGLE_CLOUD_PROJECT_ID }} --quiet
              echo "Remove: ${{ steps.generate_image.outputs.docker_image }}@$hash"
            done

            gcloud artifacts docker images delete "${{ steps.generate_image.outputs.docker_image }}" --delete-tags --project=${{ secrets.GOOGLE_CLOUD_PROJECT_ID }} --quiet
          fi

  build-cache:
    name: Delete Build Cache
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Delete GitHub Actions Cache
        run: |
          gh extension install actions/gh-actions-cache

          REPO="${{ github.repository }}"
          BRANCH="${{ inputs.ref_name }}"

          echo "Fetching list of cache key"
          cacheKeys=$(gh actions-cache list -R $REPO -B $BRANCH | cut -f 1 )

          ## Setting this to not fail the workflow while deleting cache
          set +e
          echo "Deleting caches..."
          for cacheKey in $cacheKeys
          do
              gh actions-cache delete $cacheKey -R $REPO -B $BRANCH --confirm
          done
          echo "Done"
        env:
          GH_TOKEN: ${{ github.token }}
