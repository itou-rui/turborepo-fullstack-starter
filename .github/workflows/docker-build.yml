name: "Build and Push With Docker"

on:
  workflow_call:
    inputs:
      repo_name:
        required: true
        type: string
      google_cloud_region:
        required: true
        type: string
      google_cloud_service_env:
        required: true
        type: string
      app:
        required: true
        type: string
      app_version:
        required: true
        type: string
    secrets:
      google_cloud_project_id:
        required: true
      google_cloud_project_number:
        required: true
      google_cloud_workload_identity_pool_id:
        required: true
      google_cloud_workload_identity_provider_id:
        required: true
      google_cloud_service_account:
        required: true
    outputs:
      docker_image:
        value: ${{ jobs.build-and-push.outputs.docker_image }}

jobs:
  build-and-push:
    name: Build and Push
    runs-on: ubuntu-latest
    outputs:
      docker_image: ${{ steps.generate_image.outputs.docker_image }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Authenticate with Google Cloud
        id: auth-google-cloud
        uses: google-github-actions/auth@v1
        with:
          token_format: "access_token"
          workload_identity_provider: "projects/${{ secrets.google_cloud_project_number }}/locations/global/workloadIdentityPools/${{ secrets.google_cloud_workload_identity_pool_id }}/providers/${{ secrets.google_cloud_workload_identity_provider_id }}"
          service_account: "${{ secrets.google_cloud_service_account }}"
          project_id: "${{ secrets.google_cloud_project_id }}"

      - name: Authenticate with Docker
        uses: docker/login-action@v1
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.auth-google-cloud.outputs.access_token }}"
          registry: "${{ inputs.google_cloud_region }}-docker.pkg.dev"

      - name: Generate Image
        id: generate_image
        run: |
          IMAGE_NAME="${{ inputs.google_cloud_region }}-docker.pkg.dev/${{ secrets.google_cloud_project_id }}/${{ inputs.repo_name }}/${{ inputs.app }}/${{ inputs.google_cloud_service_env }}"
          echo "docker_image=${IMAGE_NAME}" >> $GITHUB_OUTPUT

      - name: Set up buildx
        uses: docker/setup-buildx-action@v3

      - name: Create cache directory
        run: mkdir -p /tmp/.buildx-cache

      - name: Build, tag, and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/${{ inputs.app }}/Dockerfile
          push: true
          tags: |
            ${{ steps.generate_image.outputs.docker_image }}:${{ inputs.app_version }}
            ${{ steps.generate_image.outputs.docker_image }}:${{ github.sha }}
            ${{ steps.generate_image.outputs.docker_image }}:latest

          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
